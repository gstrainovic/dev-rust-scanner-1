⚠️  Warning: C:\Users\gstra\Code\rust-scanner-final\target\compromised-packages.txt not found, using embedded package list
Starting Shai-Hulud detection scan...
Scanning directory: C:/Users/gstra/Code/shai-hulud-detect/test-cases/chalk-debug-attack

🔍 Checking for malicious workflow files...
🔍 Checking 3 files for known malicious content...
[K0 / 3 checked (0 %)[K🔍 Checking 1 package.json files for compromised packages...
[K1 / 1 checked (100 %)[K🔍 Checking for suspicious postinstall hooks...
🔍 Checking for suspicious content patterns...
🔍 Checking for cryptocurrency theft patterns...
🔍 Checking for Trufflehog activity and secret scanning...
🔍 Checking for suspicious git branches...
🔍 Checking for Shai-Hulud repositories and migration patterns...
🔍 Checking package lock files for integrity issues...

==============================================
      SHAI-HULUD DETECTION REPORT
==============================================

🚨 HIGH RISK: Cryptocurrency theft patterns detected:
   - XMLHttpRequest prototype modification with crypto patterns detected - HIGH RISK
   - Known attacker wallet address detected - HIGH RISK
   - Known attacker wallet address detected - HIGH RISK
   NOTE: These patterns strongly indicate crypto theft malware from the September 8 attack.
   Immediate investigation and remediation required.

⚠️  MEDIUM RISK: Potential cryptocurrency manipulation patterns:
   - Ethereum wallet address patterns detected
   - Known crypto theft function names detected
   - Phishing domain npmjs.help detected
   - Cryptocurrency regex patterns detected
   - Ethereum wallet address patterns detected
   - Phishing domain npmjs.help detected
   - JavaScript obfuscation detected
   NOTE: These may be legitimate crypto tools or framework code.
   Manual review recommended to determine if they are malicious.

==============================================
🔍 SUMMARY:
   High Risk Issues: 3
   Medium Risk Issues: 7
   Total Critical Issues: 10

⚠️  IMPORTANT:
   - High risk issues likely indicate actual compromise
   - Medium risk issues require manual investigation
   - Low risk issues are likely false positives from legitimate code
   - Consider running additional security scans
   - Review your npm audit logs and package history
==============================================
